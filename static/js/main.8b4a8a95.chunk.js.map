{"version":3,"sources":["logo.svg","util.js","stores/FileStore.js","Home/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","randId","Math","floor","random","toString","fileMeta","fileBlob","lastModified","lastModifiedDate","name","path","size","type","webkitRelativePath","socketioConnections","query","queryString","parse","window","location","search","stores_FileStore","FileStore","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","files","users","handleConnectError","alert","handleSocketInitSuccess","isSuccess","console","error","socket","on","handleMessage","data","log","from","downloadFiles","filter","x","downloaded","downloading","length","emit","payload","map","some","f","assign","fn","to","user","_this$files","push","apply","toConsumableArray","file","objectSpread","myFile","find","otherFile","handleSocketConnect","room","id","nickname","warn","addFiles","_this$files2","removeFile","blob","index","indexOf","splice","localStorageId","localStorage","getItem","err","history","pushState","replaceState","setItem","io","connect","connect timeout","EventEmitter","Home","props","onDrop","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","blobs","buffers","wrap","_context","prev","next","Promise","all","Response","arrayBuffer","sent","i","buffer","stop","_x","arguments","handleFileStoreChange","setState","e","state","connectUrl","href","origin","pathname","removeListener","_this2","react_default","createElement","className","es","_ref2","getRootProps","getInputProps","isDragActive","Modal","trigger","Button","primary","icon","content","Header","Content","Description","Input","value","onChange","target","placeholder","onClick","classnames","dropzone","active","event","stopPropagation","Grid","Column","key","computer","mobile","tablet","Segment","style","textAlign","icons","getClass","format","as","labelPosition","color","Icon","Label","basic","pointing","prettyBytes","saveAs","Blob","height","padding","react_spinners","sizeUnit","loading","Component","App","src_Home_Home","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8b4a8a95.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","\r\nexport const randId = () => {\r\n    return Math.floor(Math.random() * 9007199254740992).toString(36);\r\n}\r\n\r\nexport const fileMeta = fileBlob => {\r\n    const { lastModified, lastModifiedDate, name, path, size, type, webkitRelativePath } = fileBlob;\r\n    return { lastModified, lastModifiedDate, name, path, size, type, webkitRelativePath }\r\n}\r\n","import { EventEmitter } from \"events\";\r\nimport queryString from 'query-string';\r\nimport { randId, fileMeta } from \"../util\";\r\nimport io from 'socket.io-client';\r\nconst socketioConnections = 'https://api.esstudio.site/api/file-sharing/no-persist-open-chat';\r\n\r\nconst query = queryString.parse(window.location.search);\r\n\r\n\r\nclass FileStore extends EventEmitter {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n\r\n        let localStorageId = false;\r\n        try {\r\n            localStorageId = localStorage.getItem('file-share-id');\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n        if (query.id) {\r\n            this.id = query.id;\r\n        } else {\r\n            this.id = randId();\r\n            if (window.history && window.history.pushState) {\r\n                window.history.replaceState(null, '', '?id=' + this.id);\r\n            }\r\n        }\r\n        if (localStorageId) {\r\n            this.user = localStorageId;\r\n        } else {\r\n            this.user = randId();\r\n            try {\r\n                localStorage.setItem('file-share-id', this.user);\r\n            } catch (err) {\r\n                console.error(err);\r\n            }\r\n        }\r\n\r\n        this.socket = io.connect(socketioConnections, { 'connect timeout': 5000 });\r\n        this.socket.on('connect', this.handleSocketConnect);\r\n        this.socket.on('connect_error', this.handleConnectError);\r\n    }\r\n\r\n    files = [];\r\n    users = [];\r\n\r\n    handleConnectError = () => {\r\n        alert('Connection failed');\r\n    }\r\n\r\n    handleSocketInitSuccess = isSuccess => {\r\n        if (!isSuccess) return console.error('Unable to connect');\r\n\r\n        this.socket.on('msg', this.handleMessage);\r\n\r\n        this.socket.on('disconnected', data => {\r\n            console.log('disconnect', data);\r\n            delete this.users[data.from];\r\n        });\r\n    }\r\n\r\n    downloadFiles = files => {\r\n        files = files.filter(x => !x.downloaded && !x.downloading);\r\n        if (files.length === 0) return;\r\n        this.socket.emit('msg', { type: 'DOWNLOAD_FILES', payload: files.map(x => fileMeta(x)) });\r\n        this.files = this.files.map(x => files.some(f => f.name === x.name) ? Object.assign(x, { downloading: true }) : x);\r\n        console.log(this.files);\r\n        this.emit('change');\r\n    }\r\n\r\n    handleMessage = (data, fn) => {\r\n        console.log('handle message', data);\r\n        if (data.to && data.to !== this.user) return;\r\n        switch(data.type) {\r\n            case 'ADD_FILES': {\r\n                this.files.push(...data.payload.map(file => ({ ...file, downloaded: false, downloading: false, user: data.from })))\r\n                break;\r\n            }\r\n            case 'DOWNLOAD_FILES': {\r\n                console.log(this.files, data.payload);\r\n                const files = this.files.filter(file => data.payload.some(f => f.name === file.name ) && file.user === this.user);\r\n                console.log(files);\r\n                this.socket.emit('msg', { type: 'SEND_FILES', to: data.from, payload: files })\r\n                break;\r\n            }\r\n            case 'SEND_FILES': {\r\n                this.files = this.files.map(myFile => Object.assign(data.payload.find(otherFile => myFile.name === otherFile.name) || myFile, { downloading: false }));\r\n                this.emit('change');\r\n                break;\r\n            }\r\n            default: break;\r\n        }\r\n        this.emit('change');\r\n    }\r\n\r\n    handleSocketConnect = () => {\r\n        this.socket.emit('init', { room: this.id, nickname: this.user }, this.handleSocketInitSuccess);\r\n        this.socket.on('disconnect', () => { console.warn(' socket disconnect'); });\r\n    }\r\n\r\n    addFiles = files => {\r\n        this.files.push(...files);\r\n        this.socket.emit('msg', ({ type: 'ADD_FILES', payload: files.map(f => fileMeta(f)) }));\r\n        this.emit('change');\r\n    }\r\n\r\n    removeFile = blob => {\r\n        const index = this.files.indexOf(blob);\r\n        if (index !== -1) {\r\n            this.files.splice(index, 1);\r\n        }\r\n        this.emit('change');\r\n    }\r\n}\r\n\r\nexport default new FileStore();\r\n","import React, { Component, Fragment } from 'react';\nimport { Button, Grid, Segment, Icon, Label, Modal, Image, Header, Input } from 'semantic-ui-react';\nimport Dropzone from 'react-dropzone';\nimport './Home.css';\nimport classnames from 'classnames';\nimport './Home.css';\nimport FileStore from '../stores/FileStore';\nimport icons from 'file-icons-js';\nimport { format } from 'timeago.js';\nimport prettyBytes from 'pretty-bytes';\nimport { fileMeta } from '../util';\nimport { Loader, SyncLoader } from 'react-spinners';\nimport { saveAs } from 'file-saver';\nimport { parse } from 'query-string'; \n\nclass Home extends Component {\n    constructor(props) {\n        super();\n        this.state = {\n            files: [],\n            connectUrl: ''\n        };\n\n    }\n\n    onDrop = async blobs => {\n        const buffers = await Promise.all(blobs.map(blob => new Response(blob).arrayBuffer()));\n        FileStore.addFiles(blobs.map((blob, i) => Object.assign(fileMeta(blob), { buffer: buffers[i], downloaded: true, downloading: false, user: FileStore.user })));\n    }\n\n    componentWillMount() {\n        FileStore.on('change', this.handleFileStoreChange);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('change', this.handleFileStoreChange);\n    }\n\n    handleFileStoreChange = () => {\n        this.setState({ files: FileStore.files });\n    }\n\n    // lastModified: 1533842957940\n    // lastModifiedDate: Thu Aug 09 2018 21:29:17 GMT+0200 (Central European Summer Time) {}\n    // name: \"menu.png\"\n    // path: \"menu.png\"\n    // size: 29314\n    // type: \"image/png\"\n    // webkitRelativePath: \"\"\n\n    connect = e => {\n        const id = parse(this.state.connectUrl).id || this.state.connectUrl;\n        window.location.href = window.location.origin + window.location.pathname + '?id=' + id;\n    }\n\n    render() {\n        console.log(this.state.files);\n        return (\n            <div className=\"Home\">\n\n\n                <Dropzone onDrop={this.onDrop}>\n                    {({ getRootProps, getInputProps, isDragActive }) => (\n                        <section>\n                            <Modal trigger={<Button primary icon='play' content='Connect' />}>\n                                <Modal.Header>Connect</Modal.Header>\n                                <Modal.Content>\n                                    <Modal.Description>\n                                        <p>Paste in the same URL as the person you want to connect to.</p>\n                                        <p>Simply copy the url bar from the other user, email or message it and paste it here.</p>\n                                        <Input value={this.state.connectUrl} onChange={e => this.setState({ connectUrl: e.target.value })} placeholder=\"The url\" />\n                                        {' '}<Button onClick={this.connect} primary>Connect</Button>\n                                    </Modal.Description>\n                                </Modal.Content>\n                            </Modal>\n                            <Button primary icon='upload' content='Upload' {...getRootProps()} />\n                            <div {...getRootProps({\n                                className: classnames({\n                                    dropzone: true,\n                                    active: isDragActive\n                                }),\n                                onClick: event => event.stopPropagation()\n                            })}>\n                                <input {...getInputProps()} />\n                                <Grid>\n                                    {this.state.files.map(file => {\n                                        const { downloaded, downloading, name, size, lastModified, user, type } = file;\n                                        console.log(file);\n                                        return (<Grid.Column key={name} computer={3} mobile={6} tablet={9}>\n                                            <Segment style={{ textAlign: 'center' }}>\n                                                <span className={'file-icon ' + icons.getClass(name)}></span><br />\n                                                {name}<br />\n                                                Last modified: {format(lastModified)}<br />\n                                                {!downloaded && <Button as='div' labelPosition='right'>\n                                                    <Button onClick={e => FileStore.downloadFiles([file])} color='red'>\n                                                        <Icon name='download' />\n                                                        Download\n                                                    </Button>\n                                                    <Label as='span' basic color='red' pointing='left'>\n                                                        {prettyBytes(size)}\n                                                    </Label>\n                                                </Button>}\n                                                {downloaded && <Button as='div' labelPosition='right'>\n                                                    <Button onClick={e => saveAs(new Blob([file.buffer], { type }))} color='blue'>\n                                                        <Icon name='download' />\n                                                        Save\n                                                    </Button>\n                                                    <Label as='span' basic color='blue' pointing='left'>\n                                                        {prettyBytes(size)}\n                                                    </Label>\n                                                </Button>}\n                                                <div style={{ height: 30, padding: 5, textAlign: 'center' }}>\n                                                    {<SyncLoader\n                                                        sizeUnit={\"px\"}\n                                                        size={20}\n                                                        color={'#1a69a4'}\n                                                        loading={downloading} />}\n                                                </div>\n                                            </Segment>\n                                        </Grid.Column>)\n                                    })}\n                                </Grid>\n                                <br />\n                                <p>Drag 'n' drop some fancy files.</p>\n                            </div>\n                        </section>\n                    )}\n                </Dropzone>\n            </div >\n        );\n    }\n}\n\nexport default Home;\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Home from './Home/Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'file-icons-js/css/style.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}